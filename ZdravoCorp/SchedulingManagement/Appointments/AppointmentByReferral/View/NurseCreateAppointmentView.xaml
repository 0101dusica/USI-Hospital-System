<Window x:Class="ZdravoCorp.SchedulingManagement.Appointments.AppointmentByReferral.View.NurseCreateAppointmentView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ZdravoCorp.SchedulingManagement.Appointments.AppointmentByReferral.View" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="NurseCreateAppointmentView" Height="450" Width="800" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonShape" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Background>
        <ImageBrush ImageSource="/Images/doktor.jpg" />
    </Window.Background>

    <DockPanel>
        <ToolBar DockPanel.Dock="Top">
            <Button Content="CREATE" HorizontalAlignment="Right" Margin="10,0,0,0" Command="{Binding CreateNurseAppointmentCommand}"/>
            <Button Content="GET REFERRALS" HorizontalAlignment="Right" Margin="15,0,0,0" Command="{Binding GetPatientReferralCommand}"/>
        </ToolBar>
        <DockPanel  Dock="Top" Margin="0">
            <TextBlock TextWrapping="Wrap" FontSize="24" TextAlignment="Center" FontWeight="Bold" FontFamily="Ebrima" Foreground="White" Opacity="0.95" Height="37" RenderTransformOrigin="0.497,0.795" Text="Create Appointment" Margin="0,30,0,0">
                <TextBlock.Effect>
                    <DropShadowEffect/>
                </TextBlock.Effect>
                <TextBlock.OpacityMask>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black"/>
                        <GradientStop Color="White" Offset="1"/>
                    </LinearGradientBrush>
                </TextBlock.OpacityMask>
            </TextBlock>
        </DockPanel>
        <DockPanel Width="670" Height="305" >
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="168*" />
                    <ColumnDefinition Width="168*" />
                    <ColumnDefinition Width="13*"/>
                    <ColumnDefinition Width="154*"/>
                    <ColumnDefinition Width="168*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition  Height="70"/>
                    <RowDefinition  Height="70"/>
                    <RowDefinition  Height="30"/>
                    <RowDefinition  Height="100"/>
                    <RowDefinition  Height="30*"/>
                </Grid.RowDefinitions>
                <Label Content="Type " FontWeight="Bold" FontSize="14" Foreground="White"  HorizontalAlignment="Left" VerticalAlignment="Top" Height="28" Width="190" Margin="-5,3,0,0" Grid.ColumnSpan="2" HorizontalContentAlignment="Center"/>
                <ComboBox  ItemsSource="{Binding AppointmentTypes}" SelectedItem="{Binding SelectedAppointmentType}"  HorizontalAlignment="Left" VerticalAlignment="Top" Height="28" Width="190" Margin="-5,31,0,0" RenderTransformOrigin="0.283,0.58" Grid.ColumnSpan="2"/>
                <DockPanel Grid.Row="3" Grid.ColumnSpan="5"  />
                <DataGrid  IsReadOnly="True" x:Name="PatientsTable" CanUserAddRows="False" AutoGenerateColumns="False" Background="Transparent" ItemsSource="{Binding PatientsTable}" SelectedItem="{Binding SelectedPatient}" Grid.ColumnSpan="5" Margin="-5,0,0,0" Grid.RowSpan="2" Grid.Row="1">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Username" Width="*" Binding="{Binding Username}"  />
                        <DataGridTextColumn Header="First name" Width="*" Binding="{Binding FirstName}" />
                        <DataGridTextColumn Header="Last name"  Width="*" Binding="{Binding LastName}" />
                        <DataGridTextColumn Header="Status" Width="*" Binding="{Binding UserStatus}" />
                    </DataGrid.Columns>
                </DataGrid>
                <DataGrid  IsReadOnly="True" x:Name="PatientsTable_Copy" CanUserAddRows="False" AutoGenerateColumns="False" Background="Transparent" ItemsSource="{Binding ReferralTable}" SelectedItem="{Binding SelectedReferral}" Grid.ColumnSpan="5" Margin="-10,32,0,2" Grid.RowSpan="2" Grid.Row="3">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Patient" Width="*" Binding="{Binding PatientUsername}"  />
                        <DataGridTextColumn Header="From doctor" Width="*" Binding="{Binding FromDoctor}" />
                        <DataGridTextColumn Header="To doctor"  Width="*" Binding="{Binding ToDoctor}" />
                        <DataGridTextColumn Header="Status" Width="*" Binding="{Binding SpecialistReferralStatus}" />
                    </DataGrid.Columns>
                </DataGrid>
                <Label Content="Referrals" HorizontalAlignment="Left" Height="33" Margin="130,0,0,0" Grid.Row="3" VerticalAlignment="Top" Width="68" Foreground="#FFF6F2F2" FontFamily="Ebrima" FontWeight="Bold" FontSize="14" Grid.Column="1" Grid.ColumnSpan="3"/>
                <xctk:DateTimePicker x:Name="DatePicker" Text="{Binding SelectedDateTime, StringFormat='dd/M/yyyy hh:mm tt'}" Grid.Column="3" IsEnabled="True" HorizontalAlignment="Left" VerticalAlignment="Top" Width="245" Height="24" Margin="77,32,0,0" Grid.ColumnSpan="2"/>
                <Label Content="Date" FontWeight="Bold" FontSize="14" Foreground="White"  HorizontalAlignment="Left" VerticalAlignment="Top" Height="28" Width="245" Margin="77,4,0,0" Grid.Column="3" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.ColumnSpan="2"/>
                <TextBox Visibility="{Binding SurgeryDurationVisibility}" Text="{Binding SurgeryDuration, UpdateSourceTrigger=PropertyChanged}" Height="26" Margin="43,32,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Grid.ColumnSpan="2" Grid.Column="1">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="5">
                                            <Grid>
                                                <TextBlock x:Name="PlaceholderText" Text="Duration.." Margin="5 0 0 0" 
                                                Foreground="DarkGray" Visibility="Collapsed"/>
                                                <ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="Text" Value="">
                                                <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                                            </Trigger>
                                            <Trigger Property="Text" Value="{x:Null}">
                                                <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                                            </Trigger>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter TargetName="PlaceholderText" Property="Visibility" Value="Collapsed"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </Grid>
        </DockPanel>
    </DockPanel>
</Window>
