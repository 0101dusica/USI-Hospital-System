<Window x:Class="ZdravoCorp.FacilitiesManagement.Orders.View.NurseMedicineSupplierView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ZdravoCorp.FacilitiesManagement.Orders.View"
        mc:Ignorable="d"
        Title="NurseMedicineSupplierView" Height="450" Width="800" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonShape" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Background>
        <ImageBrush ImageSource="/Images/doktor.jpg" />
    </Window.Background>

    <DockPanel>
        <ToolBar DockPanel.Dock="Top">
            <Button Content="ORDER" HorizontalAlignment="Right" Margin="10,0,0,0" Command="{Binding OrderMedicinesCommand}"/>
        </ToolBar>
        <DockPanel  Dock="Top" Margin="0">
            <TextBlock TextWrapping="Wrap" FontSize="24" TextAlignment="Center" FontWeight="Bold" FontFamily="Ebrima" Foreground="White" Opacity="0.95" Height="37" RenderTransformOrigin="0.497,0.795" Margin="0,30,0,0" Text="Medicines In Deficit">
                <TextBlock.Effect>
                    <DropShadowEffect/>
                </TextBlock.Effect>
                <TextBlock.OpacityMask>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black"/>
                        <GradientStop Color="White" Offset="1"/>
                    </LinearGradientBrush>
                </TextBlock.OpacityMask>
            </TextBlock>
        </DockPanel>
        <DockPanel Width="670" Height="305" >
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="168*" />
                    <ColumnDefinition Width="168*" />
                    <ColumnDefinition Width="13*"/>
                    <ColumnDefinition Width="154*"/>
                    <ColumnDefinition Width="168*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition  Height="70"/>
                    <RowDefinition  Height="70"/>
                    <RowDefinition  Height="30"/>
                    <RowDefinition  Height="100"/>
                    <RowDefinition  Height="30*"/>
                </Grid.RowDefinitions>
                <DockPanel Grid.Row="3" Grid.ColumnSpan="5"  />
                <DataGrid  IsReadOnly="True" x:Name="MedicineTable" CanUserAddRows="False" AutoGenerateColumns="False" Background="Transparent" ItemsSource="{Binding MedicineTable}" SelectedItem="{Binding SelectedMedicine}" Grid.ColumnSpan="5" Margin="-5,0,0,40" Grid.RowSpan="2">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Id" Width="*" Binding="{Binding MedicineId}"  />
                        <DataGridTextColumn Header="Quantity" Width="*" Binding="{Binding Quantity}" />
                        <DataGridTextColumn Header="Status" Width="*" Binding="{Binding Status}" />
                    </DataGrid.Columns>
                </DataGrid>
                <DataGrid  IsReadOnly="True" x:Name="MedicineOrderTable" CanUserAddRows="False" AutoGenerateColumns="False" Background="Transparent" ItemsSource="{Binding MedicineOrderTable}" SelectedItem="{Binding SelectedMedicineOrder}" Grid.ColumnSpan="5" Margin="-10,38,0,-4" Grid.RowSpan="2" Grid.Row="3">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Id" Width="*" Binding="{Binding MedicineId}"  />
                        <DataGridTextColumn Header="Quantity"  Width="*" Binding="{Binding Quantity}" />
                        <DataGridTextColumn Header="Status" Width="*" Binding="{Binding Status}" />
                    </DataGrid.Columns>
                </DataGrid>
                <Label Content="Medicine order" HorizontalAlignment="Left" Height="33" Margin="-10,0,0,0" Grid.Row="3" VerticalAlignment="Top" Width="680" Foreground="#FFF6F2F2" FontFamily="Ebrima" FontWeight="Bold" FontSize="14" Grid.ColumnSpan="5" HorizontalContentAlignment="Center"/>
                <Label Content="Quantity" HorizontalAlignment="Left" Height="27" Margin="9,58,0,0" Grid.RowSpan="2" Grid.Row="1" VerticalAlignment="Top" Width="75" Foreground="#FFF6F2F2" FontFamily="Ebrima" FontSize="14" FontWeight="Bold"/>
                <TextBox HorizontalAlignment="Left" Height="24" Margin="84,61,0,0" Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Top" Width="112" Grid.RowSpan="2" Text="{Binding Quantity, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2"/>
                <Button Grid.Column="4" Content="Add" HorizontalAlignment="Center" Height="24" Margin="0,58,0,0" Grid.RowSpan="2" Grid.Row="1" VerticalAlignment="Top" Width="112" Command="{Binding AddMedicineOrderCommand}"/>
                <TextBox IsEnabled="False" Text="{Binding MedicineName, Mode=TwoWay}" HorizontalAlignment="Left" Height="24" Margin="70,58,0,0" Grid.RowSpan="2" Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Top" Width="112" Grid.Column="3" Grid.ColumnSpan="2"/>
            </Grid>
        </DockPanel>
    </DockPanel>
</Window>
